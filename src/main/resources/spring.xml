<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

<!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties,classpath:conf.properties"/>

    <!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。  -->
    <context:component-scan base-package="com.ainijar"><!-- base-package 如果多个，用“,”分隔 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 配置 JSR303 Bean Validator 定义 @NotNull, @Max-->
    <!--<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />-->

    <!-- 计划任务配置，用 @Service @Lazy(false)标注类，用@Scheduled(cron = "0 0 2 * * ?")标注方法 -->
    <!--配置executor线程池，这里executor的含义和java.util.concurrent.Executor是一样的-->
    <!--<task:executor id="executor" pool-size="5"/>-->
    <!--&lt;!&ndash;scheduler的pool-size是ScheduledExecutorService线程池&ndash;&gt;-->
    <!--<task:scheduler id="scheduler" pool-size="5"/>-->
    <!--<task:annotation-driven scheduler="scheduler" executor="executor" proxy-target-class="true"/>-->

    <import resource="classpath:spring-shiro.xml"/>
    <import resource="classpath:spring-mybatis.xml"/>
    <import resource="classpath:spring-redis.xml"/>
    <import resource="classpath:spring-websocket.xml"/>
</beans>